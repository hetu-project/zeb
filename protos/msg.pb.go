// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v5.26.1
// source: protos/msg.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ZType int32

const (
	ZType_Z_TYPE_RNG     ZType = 0
	ZType_Z_TYPE_EVENT   ZType = 1
	ZType_Z_TYPE_CLOCK   ZType = 2
	ZType_Z_TYPE_GATEWAY ZType = 3
	ZType_Z_TYPE_ZCHAT   ZType = 4
)

// Enum value maps for ZType.
var (
	ZType_name = map[int32]string{
		0: "Z_TYPE_RNG",
		1: "Z_TYPE_EVENT",
		2: "Z_TYPE_CLOCK",
		3: "Z_TYPE_GATEWAY",
		4: "Z_TYPE_ZCHAT",
	}
	ZType_value = map[string]int32{
		"Z_TYPE_RNG":     0,
		"Z_TYPE_EVENT":   1,
		"Z_TYPE_CLOCK":   2,
		"Z_TYPE_GATEWAY": 3,
		"Z_TYPE_ZCHAT":   4,
	}
)

func (x ZType) Enum() *ZType {
	p := new(ZType)
	*p = x
	return p
}

func (x ZType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ZType) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_msg_proto_enumTypes[0].Descriptor()
}

func (ZType) Type() protoreflect.EnumType {
	return &file_protos_msg_proto_enumTypes[0]
}

func (x ZType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ZType.Descriptor instead.
func (ZType) EnumDescriptor() ([]byte, []int) {
	return file_protos_msg_proto_rawDescGZIP(), []int{0}
}

type ClockType int32

const (
	ClockType_CLOCK_TYPE_EVENT_TRIGGER ClockType = 0
	ClockType_CLOCK_TYPE_DIFF_REQ      ClockType = 1
	ClockType_CLOCK_TYPE_DIFF_RSP      ClockType = 2
	ClockType_CLOCK_TYPE_ACTIVE_SYNC   ClockType = 3
)

// Enum value maps for ClockType.
var (
	ClockType_name = map[int32]string{
		0: "CLOCK_TYPE_EVENT_TRIGGER",
		1: "CLOCK_TYPE_DIFF_REQ",
		2: "CLOCK_TYPE_DIFF_RSP",
		3: "CLOCK_TYPE_ACTIVE_SYNC",
	}
	ClockType_value = map[string]int32{
		"CLOCK_TYPE_EVENT_TRIGGER": 0,
		"CLOCK_TYPE_DIFF_REQ":      1,
		"CLOCK_TYPE_DIFF_RSP":      2,
		"CLOCK_TYPE_ACTIVE_SYNC":   3,
	}
)

func (x ClockType) Enum() *ClockType {
	p := new(ClockType)
	*p = x
	return p
}

func (x ClockType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClockType) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_msg_proto_enumTypes[1].Descriptor()
}

func (ClockType) Type() protoreflect.EnumType {
	return &file_protos_msg_proto_enumTypes[1]
}

func (x ClockType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClockType.Descriptor instead.
func (ClockType) EnumDescriptor() ([]byte, []int) {
	return file_protos_msg_proto_rawDescGZIP(), []int{1}
}

type Identity int32

const (
	Identity_IDENTITY_CLIENT Identity = 0
	Identity_IDENTITY_SERVER Identity = 1
	Identity_IDENTITY_INIT   Identity = 2
)

// Enum value maps for Identity.
var (
	Identity_name = map[int32]string{
		0: "IDENTITY_CLIENT",
		1: "IDENTITY_SERVER",
		2: "IDENTITY_INIT",
	}
	Identity_value = map[string]int32{
		"IDENTITY_CLIENT": 0,
		"IDENTITY_SERVER": 1,
		"IDENTITY_INIT":   2,
	}
)

func (x Identity) Enum() *Identity {
	p := new(Identity)
	*p = x
	return p
}

func (x Identity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Identity) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_msg_proto_enumTypes[2].Descriptor()
}

func (Identity) Type() protoreflect.EnumType {
	return &file_protos_msg_proto_enumTypes[2]
}

func (x Identity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Identity.Descriptor instead.
func (Identity) EnumDescriptor() ([]byte, []int) {
	return file_protos_msg_proto_rawDescGZIP(), []int{2}
}

type Action int32

const (
	Action_ACTION_READ        Action = 0
	Action_ACTION_WRITE       Action = 1
	Action_ACTION_READ_REPLY  Action = 2
	Action_ACTION_WRITE_REPLY Action = 3
)

// Enum value maps for Action.
var (
	Action_name = map[int32]string{
		0: "ACTION_READ",
		1: "ACTION_WRITE",
		2: "ACTION_READ_REPLY",
		3: "ACTION_WRITE_REPLY",
	}
	Action_value = map[string]int32{
		"ACTION_READ":        0,
		"ACTION_WRITE":       1,
		"ACTION_READ_REPLY":  2,
		"ACTION_WRITE_REPLY": 3,
	}
)

func (x Action) Enum() *Action {
	p := new(Action)
	*p = x
	return p
}

func (x Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Action) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_msg_proto_enumTypes[3].Descriptor()
}

func (Action) Type() protoreflect.EnumType {
	return &file_protos_msg_proto_enumTypes[3]
}

func (x Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Action.Descriptor instead.
func (Action) EnumDescriptor() ([]byte, []int) {
	return file_protos_msg_proto_rawDescGZIP(), []int{3}
}

type PushType int32

const (
	PushType_PUSH_TYPE_DIRECT    PushType = 0
	PushType_PUSH_TYPE_BROADCAST PushType = 1
)

// Enum value maps for PushType.
var (
	PushType_name = map[int32]string{
		0: "PUSH_TYPE_DIRECT",
		1: "PUSH_TYPE_BROADCAST",
	}
	PushType_value = map[string]int32{
		"PUSH_TYPE_DIRECT":    0,
		"PUSH_TYPE_BROADCAST": 1,
	}
)

func (x PushType) Enum() *PushType {
	p := new(PushType)
	*p = x
	return p
}

func (x PushType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PushType) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_msg_proto_enumTypes[4].Descriptor()
}

func (PushType) Type() protoreflect.EnumType {
	return &file_protos_msg_proto_enumTypes[4]
}

func (x PushType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PushType.Descriptor instead.
func (PushType) EnumDescriptor() ([]byte, []int) {
	return file_protos_msg_proto_rawDescGZIP(), []int{4}
}

type QueryMethod int32

const (
	QueryMethod_QUERY_BY_MSGID       QueryMethod = 0
	QueryMethod_QUERY_BY_TABLE_KEYID QueryMethod = 1
	QueryMethod_QUERY_STATUS         QueryMethod = 2
)

// Enum value maps for QueryMethod.
var (
	QueryMethod_name = map[int32]string{
		0: "QUERY_BY_MSGID",
		1: "QUERY_BY_TABLE_KEYID",
		2: "QUERY_STATUS",
	}
	QueryMethod_value = map[string]int32{
		"QUERY_BY_MSGID":       0,
		"QUERY_BY_TABLE_KEYID": 1,
		"QUERY_STATUS":         2,
	}
)

func (x QueryMethod) Enum() *QueryMethod {
	p := new(QueryMethod)
	*p = x
	return p
}

func (x QueryMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueryMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_msg_proto_enumTypes[5].Descriptor()
}

func (QueryMethod) Type() protoreflect.EnumType {
	return &file_protos_msg_proto_enumTypes[5]
}

func (x QueryMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QueryMethod.Descriptor instead.
func (QueryMethod) EnumDescriptor() ([]byte, []int) {
	return file_protos_msg_proto_rawDescGZIP(), []int{5}
}

type GatewayType int32

const (
	GatewayType_GATEWAY_TYPE_CLOCK_NODE GatewayType = 0
	GatewayType_GATEWAY_TYPE_MERGE_LOG  GatewayType = 1 // ref merge log
	GatewayType_GATEWAY_TYPE_NODE_INFO  GatewayType = 2 // heartbeat or node info
)

// Enum value maps for GatewayType.
var (
	GatewayType_name = map[int32]string{
		0: "GATEWAY_TYPE_CLOCK_NODE",
		1: "GATEWAY_TYPE_MERGE_LOG",
		2: "GATEWAY_TYPE_NODE_INFO",
	}
	GatewayType_value = map[string]int32{
		"GATEWAY_TYPE_CLOCK_NODE": 0,
		"GATEWAY_TYPE_MERGE_LOG":  1,
		"GATEWAY_TYPE_NODE_INFO":  2,
	}
)

func (x GatewayType) Enum() *GatewayType {
	p := new(GatewayType)
	*p = x
	return p
}

func (x GatewayType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GatewayType) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_msg_proto_enumTypes[6].Descriptor()
}

func (GatewayType) Type() protoreflect.EnumType {
	return &file_protos_msg_proto_enumTypes[6]
}

func (x GatewayType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GatewayType.Descriptor instead.
func (GatewayType) EnumDescriptor() ([]byte, []int) {
	return file_protos_msg_proto_rawDescGZIP(), []int{6}
}

type ZMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Version   uint32 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Type      ZType  `protobuf:"varint,3,opt,name=type,proto3,enum=protos.ZType" json:"type,omitempty"`
	PublicKey []byte `protobuf:"bytes,4,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Data      []byte `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	Signature []byte `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`
	From      []byte `protobuf:"bytes,7,opt,name=from,proto3" json:"from,omitempty"`
	To        []byte `protobuf:"bytes,8,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *ZMessage) Reset() {
	*x = ZMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_msg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZMessage) ProtoMessage() {}

func (x *ZMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protos_msg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZMessage.ProtoReflect.Descriptor instead.
func (*ZMessage) Descriptor() ([]byte, []int) {
	return file_protos_msg_proto_rawDescGZIP(), []int{0}
}

func (x *ZMessage) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ZMessage) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ZMessage) GetType() ZType {
	if x != nil {
		return x.Type
	}
	return ZType_Z_TYPE_RNG
}

func (x *ZMessage) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *ZMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ZMessage) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *ZMessage) GetFrom() []byte {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ZMessage) GetTo() []byte {
	if x != nil {
		return x.To
	}
	return nil
}

type Clock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values map[string]uint64 `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *Clock) Reset() {
	*x = Clock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_msg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Clock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Clock) ProtoMessage() {}

func (x *Clock) ProtoReflect() protoreflect.Message {
	mi := &file_protos_msg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Clock.ProtoReflect.Descriptor instead.
func (*Clock) Descriptor() ([]byte, []int) {
	return file_protos_msg_proto_rawDescGZIP(), []int{1}
}

func (x *Clock) GetValues() map[string]uint64 {
	if x != nil {
		return x.Values
	}
	return nil
}

type ClockInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clock     *Clock `protobuf:"bytes,1,opt,name=clock,proto3" json:"clock,omitempty"`
	NodeId    []byte `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	ClockHash []byte `protobuf:"bytes,3,opt,name=clock_hash,json=clockHash,proto3" json:"clock_hash,omitempty"`
	MessageId []byte `protobuf:"bytes,4,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Count     uint64 `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
	CreateAt  uint64 `protobuf:"varint,6,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
}

func (x *ClockInfo) Reset() {
	*x = ClockInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_msg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClockInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClockInfo) ProtoMessage() {}

func (x *ClockInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protos_msg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClockInfo.ProtoReflect.Descriptor instead.
func (*ClockInfo) Descriptor() ([]byte, []int) {
	return file_protos_msg_proto_rawDescGZIP(), []int{2}
}

func (x *ClockInfo) GetClock() *Clock {
	if x != nil {
		return x.Clock
	}
	return nil
}

func (x *ClockInfo) GetNodeId() []byte {
	if x != nil {
		return x.NodeId
	}
	return nil
}

func (x *ClockInfo) GetClockHash() []byte {
	if x != nil {
		return x.ClockHash
	}
	return nil
}

func (x *ClockInfo) GetMessageId() []byte {
	if x != nil {
		return x.MessageId
	}
	return nil
}

func (x *ClockInfo) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ClockInfo) GetCreateAt() uint64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

type MergeLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromId     []byte `protobuf:"bytes,1,opt,name=from_id,json=fromId,proto3" json:"from_id,omitempty"`
	ToId       []byte `protobuf:"bytes,2,opt,name=to_id,json=toId,proto3" json:"to_id,omitempty"`
	StartCount uint64 `protobuf:"varint,3,opt,name=start_count,json=startCount,proto3" json:"start_count,omitempty"`
	EndCount   uint64 `protobuf:"varint,4,opt,name=end_count,json=endCount,proto3" json:"end_count,omitempty"`
	SClock     *Clock `protobuf:"bytes,5,opt,name=s_clock,json=sClock,proto3" json:"s_clock,omitempty"`
	EClock     *Clock `protobuf:"bytes,6,opt,name=e_clock,json=eClock,proto3" json:"e_clock,omitempty"`
	MergeAt    uint64 `protobuf:"varint,7,opt,name=merge_at,json=mergeAt,proto3" json:"merge_at,omitempty"`
}

func (x *MergeLog) Reset() {
	*x = MergeLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_msg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MergeLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeLog) ProtoMessage() {}

func (x *MergeLog) ProtoReflect() protoreflect.Message {
	mi := &file_protos_msg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeLog.ProtoReflect.Descriptor instead.
func (*MergeLog) Descriptor() ([]byte, []int) {
	return file_protos_msg_proto_rawDescGZIP(), []int{3}
}

func (x *MergeLog) GetFromId() []byte {
	if x != nil {
		return x.FromId
	}
	return nil
}

func (x *MergeLog) GetToId() []byte {
	if x != nil {
		return x.ToId
	}
	return nil
}

func (x *MergeLog) GetStartCount() uint64 {
	if x != nil {
		return x.StartCount
	}
	return 0
}

func (x *MergeLog) GetEndCount() uint64 {
	if x != nil {
		return x.EndCount
	}
	return 0
}

func (x *MergeLog) GetSClock() *Clock {
	if x != nil {
		return x.SClock
	}
	return nil
}

func (x *MergeLog) GetEClock() *Clock {
	if x != nil {
		return x.EClock
	}
	return nil
}

func (x *MergeLog) GetMergeAt() uint64 {
	if x != nil {
		return x.MergeAt
	}
	return 0
}

// zmessage type = Z_TYPE_CLOCK
type ZClock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type ClockType `protobuf:"varint,1,opt,name=type,proto3,enum=protos.ClockType" json:"type,omitempty"`
	Data []byte    `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ZClock) Reset() {
	*x = ZClock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_msg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZClock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZClock) ProtoMessage() {}

func (x *ZClock) ProtoReflect() protoreflect.Message {
	mi := &file_protos_msg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZClock.ProtoReflect.Descriptor instead.
func (*ZClock) Descriptor() ([]byte, []int) {
	return file_protos_msg_proto_rawDescGZIP(), []int{4}
}

func (x *ZClock) GetType() ClockType {
	if x != nil {
		return x.Type
	}
	return ClockType_CLOCK_TYPE_EVENT_TRIGGER
}

func (x *ZClock) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// Server Clock Message
type EventTrigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClockInfo *ClockInfo `protobuf:"bytes,1,opt,name=clock_info,json=clockInfo,proto3" json:"clock_info,omitempty"`
	Message   *ZMessage  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventTrigger) Reset() {
	*x = EventTrigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_msg_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventTrigger) ProtoMessage() {}

func (x *EventTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_protos_msg_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventTrigger.ProtoReflect.Descriptor instead.
func (*EventTrigger) Descriptor() ([]byte, []int) {
	return file_protos_msg_proto_rawDescGZIP(), []int{5}
}

func (x *EventTrigger) GetClockInfo() *ClockInfo {
	if x != nil {
		return x.ClockInfo
	}
	return nil
}

func (x *EventTrigger) GetMessage() *ZMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type DiffReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	To        []byte     `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	FromClock *ClockInfo `protobuf:"bytes,2,opt,name=from_clock,json=fromClock,proto3" json:"from_clock,omitempty"`
}

func (x *DiffReq) Reset() {
	*x = DiffReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_msg_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiffReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiffReq) ProtoMessage() {}

func (x *DiffReq) ProtoReflect() protoreflect.Message {
	mi := &file_protos_msg_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiffReq.ProtoReflect.Descriptor instead.
func (*DiffReq) Descriptor() ([]byte, []int) {
	return file_protos_msg_proto_rawDescGZIP(), []int{6}
}

func (x *DiffReq) GetTo() []byte {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *DiffReq) GetFromClock() *ClockInfo {
	if x != nil {
		return x.FromClock
	}
	return nil
}

type DiffResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	To    []byte     `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	Diffs []string   `protobuf:"bytes,2,rep,name=diffs,proto3" json:"diffs,omitempty"`
	From  *ClockInfo `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
}

func (x *DiffResp) Reset() {
	*x = DiffResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_msg_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiffResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiffResp) ProtoMessage() {}

func (x *DiffResp) ProtoReflect() protoreflect.Message {
	mi := &file_protos_msg_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiffResp.ProtoReflect.Descriptor instead.
func (*DiffResp) Descriptor() ([]byte, []int) {
	return file_protos_msg_proto_rawDescGZIP(), []int{7}
}

func (x *DiffResp) GetTo() []byte {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *DiffResp) GetDiffs() []string {
	if x != nil {
		return x.Diffs
	}
	return nil
}

func (x *DiffResp) GetFrom() *ClockInfo {
	if x != nil {
		return x.From
	}
	return nil
}

type ActiveSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	To     []byte     `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	Diffs  []string   `protobuf:"bytes,2,rep,name=diffs,proto3" json:"diffs,omitempty"`
	Latest *ClockInfo `protobuf:"bytes,3,opt,name=latest,proto3" json:"latest,omitempty"`
}

func (x *ActiveSync) Reset() {
	*x = ActiveSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_msg_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveSync) ProtoMessage() {}

func (x *ActiveSync) ProtoReflect() protoreflect.Message {
	mi := &file_protos_msg_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveSync.ProtoReflect.Descriptor instead.
func (*ActiveSync) Descriptor() ([]byte, []int) {
	return file_protos_msg_proto_rawDescGZIP(), []int{8}
}

func (x *ActiveSync) GetTo() []byte {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *ActiveSync) GetDiffs() []string {
	if x != nil {
		return x.Diffs
	}
	return nil
}

func (x *ActiveSync) GetLatest() *ClockInfo {
	if x != nil {
		return x.Latest
	}
	return nil
}

type Innermsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity   Identity  `protobuf:"varint,1,opt,name=identity,proto3,enum=protos.Identity" json:"identity,omitempty"`
	Action     Action    `protobuf:"varint,2,opt,name=action,proto3,enum=protos.Action" json:"action,omitempty"`
	PushType   PushType  `protobuf:"varint,3,opt,name=push_type,json=pushType,proto3,enum=protos.PushType" json:"push_type,omitempty"` // for vlc
	Message    *ZMessage `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	PublicKeys [][]byte  `protobuf:"bytes,5,rep,name=public_keys,json=publicKeys,proto3" json:"public_keys,omitempty"`
	Signatures [][]byte  `protobuf:"bytes,6,rep,name=signatures,proto3" json:"signatures,omitempty"` // for verifying or threshold signatures
}

func (x *Innermsg) Reset() {
	*x = Innermsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_msg_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Innermsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Innermsg) ProtoMessage() {}

func (x *Innermsg) ProtoReflect() protoreflect.Message {
	mi := &file_protos_msg_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Innermsg.ProtoReflect.Descriptor instead.
func (*Innermsg) Descriptor() ([]byte, []int) {
	return file_protos_msg_proto_rawDescGZIP(), []int{9}
}

func (x *Innermsg) GetIdentity() Identity {
	if x != nil {
		return x.Identity
	}
	return Identity_IDENTITY_CLIENT
}

func (x *Innermsg) GetAction() Action {
	if x != nil {
		return x.Action
	}
	return Action_ACTION_READ
}

func (x *Innermsg) GetPushType() PushType {
	if x != nil {
		return x.PushType
	}
	return PushType_PUSH_TYPE_DIRECT
}

func (x *Innermsg) GetMessage() *ZMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *Innermsg) GetPublicKeys() [][]byte {
	if x != nil {
		return x.PublicKeys
	}
	return nil
}

func (x *Innermsg) GetSignatures() [][]byte {
	if x != nil {
		return x.Signatures
	}
	return nil
}

type ZChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageData []byte     `protobuf:"bytes,1,opt,name=message_data,json=messageData,proto3" json:"message_data,omitempty"`
	Clock       *ClockInfo `protobuf:"bytes,2,opt,name=clock,proto3" json:"clock,omitempty"`
}

func (x *ZChat) Reset() {
	*x = ZChat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_msg_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZChat) ProtoMessage() {}

func (x *ZChat) ProtoReflect() protoreflect.Message {
	mi := &file_protos_msg_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZChat.ProtoReflect.Descriptor instead.
func (*ZChat) Descriptor() ([]byte, []int) {
	return file_protos_msg_proto_rawDescGZIP(), []int{10}
}

func (x *ZChat) GetMessageData() []byte {
	if x != nil {
		return x.MessageData
	}
	return nil
}

func (x *ZChat) GetClock() *ClockInfo {
	if x != nil {
		return x.Clock
	}
	return nil
}

// ZMessage.type = Z_TYPE_GATEWAY
// Gateway just only needs read api
type ZGateway struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string      `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Type      GatewayType `protobuf:"varint,2,opt,name=type,proto3,enum=protos.GatewayType" json:"type,omitempty"`
	Method    QueryMethod `protobuf:"varint,3,opt,name=method,proto3,enum=protos.QueryMethod" json:"method,omitempty"`
	Data      []byte      `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ZGateway) Reset() {
	*x = ZGateway{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_msg_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZGateway) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZGateway) ProtoMessage() {}

func (x *ZGateway) ProtoReflect() protoreflect.Message {
	mi := &file_protos_msg_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZGateway.ProtoReflect.Descriptor instead.
func (*ZGateway) Descriptor() ([]byte, []int) {
	return file_protos_msg_proto_rawDescGZIP(), []int{11}
}

func (x *ZGateway) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *ZGateway) GetType() GatewayType {
	if x != nil {
		return x.Type
	}
	return GatewayType_GATEWAY_TYPE_CLOCK_NODE
}

func (x *ZGateway) GetMethod() QueryMethod {
	if x != nil {
		return x.Method
	}
	return QueryMethod_QUERY_BY_MSGID
}

func (x *ZGateway) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Success   bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Reason    string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	Data      []byte `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryResponse) Reset() {
	*x = QueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_msg_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResponse) ProtoMessage() {}

func (x *QueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_msg_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResponse.ProtoReflect.Descriptor instead.
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return file_protos_msg_proto_rawDescGZIP(), []int{12}
}

func (x *QueryResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *QueryResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *QueryResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *QueryResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClockTotal    uint64 `protobuf:"varint,1,opt,name=clock_total,json=clockTotal,proto3" json:"clock_total,omitempty"`
	MergelogTotal uint64 `protobuf:"varint,2,opt,name=mergelog_total,json=mergelogTotal,proto3" json:"mergelog_total,omitempty"`
	ZmessageTotal uint64 `protobuf:"varint,3,opt,name=zmessage_total,json=zmessageTotal,proto3" json:"zmessage_total,omitempty"`
}

func (x *QueryStatus) Reset() {
	*x = QueryStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_msg_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryStatus) ProtoMessage() {}

func (x *QueryStatus) ProtoReflect() protoreflect.Message {
	mi := &file_protos_msg_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryStatus.ProtoReflect.Descriptor instead.
func (*QueryStatus) Descriptor() ([]byte, []int) {
	return file_protos_msg_proto_rawDescGZIP(), []int{13}
}

func (x *QueryStatus) GetClockTotal() uint64 {
	if x != nil {
		return x.ClockTotal
	}
	return 0
}

func (x *QueryStatus) GetMergelogTotal() uint64 {
	if x != nil {
		return x.MergelogTotal
	}
	return 0
}

func (x *QueryStatus) GetZmessageTotal() uint64 {
	if x != nil {
		return x.ZmessageTotal
	}
	return 0
}

// ZGateway.type = GATEWAY_TYPE_CLOCK_NODE
type ClockNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clock      *Clock `protobuf:"bytes,1,opt,name=clock,proto3" json:"clock,omitempty"`
	Id         []byte `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	MessageId  []byte `protobuf:"bytes,3,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Count      uint64 `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	CreateAt   uint64 `protobuf:"varint,5,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	RawMessage []byte `protobuf:"bytes,6,opt,name=raw_message,json=rawMessage,proto3" json:"raw_message,omitempty"`
}

func (x *ClockNode) Reset() {
	*x = ClockNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_msg_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClockNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClockNode) ProtoMessage() {}

func (x *ClockNode) ProtoReflect() protoreflect.Message {
	mi := &file_protos_msg_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClockNode.ProtoReflect.Descriptor instead.
func (*ClockNode) Descriptor() ([]byte, []int) {
	return file_protos_msg_proto_rawDescGZIP(), []int{14}
}

func (x *ClockNode) GetClock() *Clock {
	if x != nil {
		return x.Clock
	}
	return nil
}

func (x *ClockNode) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ClockNode) GetMessageId() []byte {
	if x != nil {
		return x.MessageId
	}
	return nil
}

func (x *ClockNode) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ClockNode) GetCreateAt() uint64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *ClockNode) GetRawMessage() []byte {
	if x != nil {
		return x.RawMessage
	}
	return nil
}

// ZGateway.type = GATEWAY_TYPE_NODE_INFO
type NodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeIds []string `protobuf:"bytes,1,rep,name=node_ids,json=nodeIds,proto3" json:"node_ids,omitempty"`
}

func (x *NodeInfo) Reset() {
	*x = NodeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_msg_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfo) ProtoMessage() {}

func (x *NodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protos_msg_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfo.ProtoReflect.Descriptor instead.
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return file_protos_msg_proto_rawDescGZIP(), []int{15}
}

func (x *NodeInfo) GetNodeIds() []string {
	if x != nil {
		return x.NodeIds
	}
	return nil
}

type NodeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey     []byte `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	WebsocketPort uint32 `protobuf:"varint,2,opt,name=websocket_port,json=websocketPort,proto3" json:"websocket_port,omitempty"`
	JsonRpcPort   uint32 `protobuf:"varint,3,opt,name=json_rpc_port,json=jsonRpcPort,proto3" json:"json_rpc_port,omitempty"`
	Domain        string `protobuf:"bytes,4,opt,name=domain,proto3" json:"domain,omitempty"`
}

func (x *NodeData) Reset() {
	*x = NodeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_msg_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeData) ProtoMessage() {}

func (x *NodeData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_msg_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeData.ProtoReflect.Descriptor instead.
func (*NodeData) Descriptor() ([]byte, []int) {
	return file_protos_msg_proto_rawDescGZIP(), []int{16}
}

func (x *NodeData) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *NodeData) GetWebsocketPort() uint32 {
	if x != nil {
		return x.WebsocketPort
	}
	return 0
}

func (x *NodeData) GetJsonRpcPort() uint32 {
	if x != nil {
		return x.JsonRpcPort
	}
	return 0
}

func (x *NodeData) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

// ZGateway.method = QUERY_BY_MSGID
type QueryByMsgID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgId string `protobuf:"bytes,1,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
}

func (x *QueryByMsgID) Reset() {
	*x = QueryByMsgID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_msg_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryByMsgID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryByMsgID) ProtoMessage() {}

func (x *QueryByMsgID) ProtoReflect() protoreflect.Message {
	mi := &file_protos_msg_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryByMsgID.ProtoReflect.Descriptor instead.
func (*QueryByMsgID) Descriptor() ([]byte, []int) {
	return file_protos_msg_proto_rawDescGZIP(), []int{17}
}

func (x *QueryByMsgID) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

// ZGateway.method = QUERY_BY_TABLE_KEYID
type QueryByTableKeyID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastPos uint64 `protobuf:"varint,1,opt,name=last_pos,json=lastPos,proto3" json:"last_pos,omitempty"`
}

func (x *QueryByTableKeyID) Reset() {
	*x = QueryByTableKeyID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_msg_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryByTableKeyID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryByTableKeyID) ProtoMessage() {}

func (x *QueryByTableKeyID) ProtoReflect() protoreflect.Message {
	mi := &file_protos_msg_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryByTableKeyID.ProtoReflect.Descriptor instead.
func (*QueryByTableKeyID) Descriptor() ([]byte, []int) {
	return file_protos_msg_proto_rawDescGZIP(), []int{18}
}

func (x *QueryByTableKeyID) GetLastPos() uint64 {
	if x != nil {
		return x.LastPos
	}
	return 0
}

type OutboundMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	From []byte `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To   []byte `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	Data []byte `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Type ZType  `protobuf:"varint,5,opt,name=type,proto3,enum=protos.ZType" json:"type,omitempty"`
}

func (x *OutboundMsg) Reset() {
	*x = OutboundMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_msg_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutboundMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutboundMsg) ProtoMessage() {}

func (x *OutboundMsg) ProtoReflect() protoreflect.Message {
	mi := &file_protos_msg_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutboundMsg.ProtoReflect.Descriptor instead.
func (*OutboundMsg) Descriptor() ([]byte, []int) {
	return file_protos_msg_proto_rawDescGZIP(), []int{19}
}

func (x *OutboundMsg) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *OutboundMsg) GetFrom() []byte {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *OutboundMsg) GetTo() []byte {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *OutboundMsg) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *OutboundMsg) GetType() ZType {
	if x != nil {
		return x.Type
	}
	return ZType_Z_TYPE_RNG
}

type InboundMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	From []byte `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	Data []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Type ZType  `protobuf:"varint,4,opt,name=type,proto3,enum=protos.ZType" json:"type,omitempty"`
}

func (x *InboundMsg) Reset() {
	*x = InboundMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_msg_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InboundMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InboundMsg) ProtoMessage() {}

func (x *InboundMsg) ProtoReflect() protoreflect.Message {
	mi := &file_protos_msg_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InboundMsg.ProtoReflect.Descriptor instead.
func (*InboundMsg) Descriptor() ([]byte, []int) {
	return file_protos_msg_proto_rawDescGZIP(), []int{20}
}

func (x *InboundMsg) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *InboundMsg) GetFrom() []byte {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *InboundMsg) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *InboundMsg) GetType() ZType {
	if x != nil {
		return x.Type
	}
	return ZType_Z_TYPE_RNG
}

var File_protos_msg_proto protoreflect.FileDescriptor

var file_protos_msg_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x22, 0xcc, 0x01, 0x0a, 0x08, 0x5a,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x21, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x5a, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x75, 0x0a, 0x05, 0x43, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x31, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xba, 0x01, 0x0a, 0x09, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23,
	0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x63, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0xe1, 0x01,
	0x0a, 0x08, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x66, 0x72, 0x6f,
	0x6d, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x74, 0x6f, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x64,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x65, 0x6e,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x07, 0x73, 0x5f, 0x63, 0x6c, 0x6f, 0x63,
	0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x06, 0x73, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x26,
	0x0a, 0x07, 0x65, 0x5f, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x06,
	0x65, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x5f,
	0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x41,
	0x74, 0x22, 0x43, 0x0a, 0x06, 0x5a, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x25, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x6c, 0x0a, 0x0c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x63,
	0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x5a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x4b, 0x0a, 0x07, 0x44, 0x69, 0x66, 0x66, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x74, 0x6f, 0x12,
	0x30, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x6c, 0x6f,
	0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x43, 0x6c, 0x6f, 0x63,
	0x6b, 0x22, 0x57, 0x0a, 0x08, 0x44, 0x69, 0x66, 0x66, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x64, 0x69, 0x66, 0x66, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x64, 0x69,
	0x66, 0x66, 0x73, 0x12, 0x25, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x6c, 0x6f, 0x63, 0x6b,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x22, 0x5d, 0x0a, 0x0a, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x69, 0x66, 0x66,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x64, 0x69, 0x66, 0x66, 0x73, 0x12, 0x29,
	0x0a, 0x06, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x06, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x22, 0xfc, 0x01, 0x0a, 0x08, 0x49, 0x6e,
	0x6e, 0x65, 0x72, 0x6d, 0x73, 0x67, 0x12, 0x2c, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x09,
	0x70, 0x75, 0x73, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x08, 0x70, 0x75, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x5a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22, 0x53, 0x0a, 0x05, 0x5a, 0x43, 0x68, 0x61,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x6c, 0x6f,
	0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x93, 0x01,
	0x0a, 0x08, 0x5a, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x74, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7c, 0x0a, 0x0b, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63,
	0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x72,
	0x67, 0x65, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6c, 0x6f, 0x67, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x25, 0x0a, 0x0e, 0x7a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x7a, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xb3, 0x01, 0x0a, 0x09, 0x43, 0x6c, 0x6f, 0x63,
	0x6b, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x6c,
	0x6f, 0x63, 0x6b, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x61, 0x77, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x72, 0x61, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x25, 0x0a,
	0x08, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x12, 0x25, 0x0a, 0x0e, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x6a, 0x73, 0x6f, 0x6e, 0x5f,
	0x72, 0x70, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x6a, 0x73, 0x6f, 0x6e, 0x52, 0x70, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x22, 0x25, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x79, 0x4d, 0x73,
	0x67, 0x49, 0x44, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x11, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x42, 0x79, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x49, 0x44, 0x12,
	0x19, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x22, 0x78, 0x0a, 0x0b, 0x4f, 0x75,
	0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x21, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x5a, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x22, 0x67, 0x0a, 0x0a, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4d,
	0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x5a, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x2a, 0x61, 0x0a,
	0x05, 0x5a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x5a, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x52, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x5a, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x5a, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x43, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x5a, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x41, 0x54, 0x45, 0x57, 0x41, 0x59, 0x10, 0x03, 0x12, 0x10,
	0x0a, 0x0c, 0x5a, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x5a, 0x43, 0x48, 0x41, 0x54, 0x10, 0x04,
	0x2a, 0x77, 0x0a, 0x09, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a,
	0x18, 0x43, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x56, 0x45, 0x4e,
	0x54, 0x5f, 0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x43,
	0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x49, 0x46, 0x46, 0x5f, 0x52,
	0x45, 0x51, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x44, 0x49, 0x46, 0x46, 0x5f, 0x52, 0x53, 0x50, 0x10, 0x02, 0x12, 0x1a, 0x0a,
	0x16, 0x43, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49,
	0x56, 0x45, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x03, 0x2a, 0x47, 0x0a, 0x08, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x54,
	0x59, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x44,
	0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x10, 0x01, 0x12,
	0x11, 0x0a, 0x0d, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x4e, 0x49, 0x54,
	0x10, 0x02, 0x2a, 0x5a, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x0a, 0x0b,
	0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a,
	0x0c, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x45, 0x10, 0x01, 0x12,
	0x15, 0x0a, 0x11, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x52,
	0x45, 0x50, 0x4c, 0x59, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x57, 0x52, 0x49, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x50, 0x4c, 0x59, 0x10, 0x03, 0x2a, 0x39,
	0x0a, 0x08, 0x50, 0x75, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x55,
	0x53, 0x48, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x10, 0x00,
	0x12, 0x17, 0x0a, 0x13, 0x50, 0x55, 0x53, 0x48, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x52,
	0x4f, 0x41, 0x44, 0x43, 0x41, 0x53, 0x54, 0x10, 0x01, 0x2a, 0x4d, 0x0a, 0x0b, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x0e, 0x51, 0x55, 0x45, 0x52,
	0x59, 0x5f, 0x42, 0x59, 0x5f, 0x4d, 0x53, 0x47, 0x49, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14,
	0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x42, 0x59, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x4b,
	0x45, 0x59, 0x49, 0x44, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x02, 0x2a, 0x62, 0x0a, 0x0b, 0x47, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x47, 0x41, 0x54, 0x45, 0x57,
	0x41, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x4e, 0x4f,
	0x44, 0x45, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x47, 0x41, 0x54, 0x45, 0x57, 0x41, 0x59, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x45, 0x52, 0x47, 0x45, 0x5f, 0x4c, 0x4f, 0x47, 0x10, 0x01,
	0x12, 0x1a, 0x0a, 0x16, 0x47, 0x41, 0x54, 0x45, 0x57, 0x41, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x02, 0x42, 0x04, 0x5a, 0x02,
	0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_msg_proto_rawDescOnce sync.Once
	file_protos_msg_proto_rawDescData = file_protos_msg_proto_rawDesc
)

func file_protos_msg_proto_rawDescGZIP() []byte {
	file_protos_msg_proto_rawDescOnce.Do(func() {
		file_protos_msg_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_msg_proto_rawDescData)
	})
	return file_protos_msg_proto_rawDescData
}

var file_protos_msg_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_protos_msg_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_protos_msg_proto_goTypes = []interface{}{
	(ZType)(0),                // 0: protos.ZType
	(ClockType)(0),            // 1: protos.ClockType
	(Identity)(0),             // 2: protos.Identity
	(Action)(0),               // 3: protos.Action
	(PushType)(0),             // 4: protos.PushType
	(QueryMethod)(0),          // 5: protos.QueryMethod
	(GatewayType)(0),          // 6: protos.GatewayType
	(*ZMessage)(nil),          // 7: protos.ZMessage
	(*Clock)(nil),             // 8: protos.Clock
	(*ClockInfo)(nil),         // 9: protos.ClockInfo
	(*MergeLog)(nil),          // 10: protos.MergeLog
	(*ZClock)(nil),            // 11: protos.ZClock
	(*EventTrigger)(nil),      // 12: protos.EventTrigger
	(*DiffReq)(nil),           // 13: protos.DiffReq
	(*DiffResp)(nil),          // 14: protos.DiffResp
	(*ActiveSync)(nil),        // 15: protos.ActiveSync
	(*Innermsg)(nil),          // 16: protos.Innermsg
	(*ZChat)(nil),             // 17: protos.ZChat
	(*ZGateway)(nil),          // 18: protos.ZGateway
	(*QueryResponse)(nil),     // 19: protos.QueryResponse
	(*QueryStatus)(nil),       // 20: protos.QueryStatus
	(*ClockNode)(nil),         // 21: protos.ClockNode
	(*NodeInfo)(nil),          // 22: protos.NodeInfo
	(*NodeData)(nil),          // 23: protos.NodeData
	(*QueryByMsgID)(nil),      // 24: protos.QueryByMsgID
	(*QueryByTableKeyID)(nil), // 25: protos.QueryByTableKeyID
	(*OutboundMsg)(nil),       // 26: protos.OutboundMsg
	(*InboundMsg)(nil),        // 27: protos.InboundMsg
	nil,                       // 28: protos.Clock.ValuesEntry
}
var file_protos_msg_proto_depIdxs = []int32{
	0,  // 0: protos.ZMessage.type:type_name -> protos.ZType
	28, // 1: protos.Clock.values:type_name -> protos.Clock.ValuesEntry
	8,  // 2: protos.ClockInfo.clock:type_name -> protos.Clock
	8,  // 3: protos.MergeLog.s_clock:type_name -> protos.Clock
	8,  // 4: protos.MergeLog.e_clock:type_name -> protos.Clock
	1,  // 5: protos.ZClock.type:type_name -> protos.ClockType
	9,  // 6: protos.EventTrigger.clock_info:type_name -> protos.ClockInfo
	7,  // 7: protos.EventTrigger.message:type_name -> protos.ZMessage
	9,  // 8: protos.DiffReq.from_clock:type_name -> protos.ClockInfo
	9,  // 9: protos.DiffResp.from:type_name -> protos.ClockInfo
	9,  // 10: protos.ActiveSync.latest:type_name -> protos.ClockInfo
	2,  // 11: protos.Innermsg.identity:type_name -> protos.Identity
	3,  // 12: protos.Innermsg.action:type_name -> protos.Action
	4,  // 13: protos.Innermsg.push_type:type_name -> protos.PushType
	7,  // 14: protos.Innermsg.message:type_name -> protos.ZMessage
	9,  // 15: protos.ZChat.clock:type_name -> protos.ClockInfo
	6,  // 16: protos.ZGateway.type:type_name -> protos.GatewayType
	5,  // 17: protos.ZGateway.method:type_name -> protos.QueryMethod
	8,  // 18: protos.ClockNode.clock:type_name -> protos.Clock
	0,  // 19: protos.OutboundMsg.type:type_name -> protos.ZType
	0,  // 20: protos.InboundMsg.type:type_name -> protos.ZType
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_protos_msg_proto_init() }
func file_protos_msg_proto_init() {
	if File_protos_msg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_msg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_msg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Clock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_msg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClockInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_msg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MergeLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_msg_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZClock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_msg_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventTrigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_msg_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiffReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_msg_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiffResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_msg_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActiveSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_msg_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Innermsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_msg_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZChat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_msg_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZGateway); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_msg_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_msg_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_msg_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClockNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_msg_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_msg_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_msg_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryByMsgID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_msg_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryByTableKeyID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_msg_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutboundMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_msg_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InboundMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_msg_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_msg_proto_goTypes,
		DependencyIndexes: file_protos_msg_proto_depIdxs,
		EnumInfos:         file_protos_msg_proto_enumTypes,
		MessageInfos:      file_protos_msg_proto_msgTypes,
	}.Build()
	File_protos_msg_proto = out.File
	file_protos_msg_proto_rawDesc = nil
	file_protos_msg_proto_goTypes = nil
	file_protos_msg_proto_depIdxs = nil
}
